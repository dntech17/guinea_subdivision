{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/index.js","webpack:///external \"fs\"","webpack:///external \"lodash\"","webpack:///external \"path\""],"names":["regionsPath","path","process","prefecturespath","sousprefecturespath","regionsFile","fs","prefecturesFile","sousprefecturesFile","regions","JSON","prefectures","sousprefectures","getRegionsAndCodes","getRegions","data","getRegionsCodes","getRegionNameByCode","name","getRegionCodeByName","code","getPrefecturesAndCodes","getPrefecturesCodes","getPrefectures","getPrefecturesAndCodesByRegionCode","result","getPrefecturesByRegionCode","getPrefecturesByRegionName","regionCode","getPrefectureNameByCode","getPrefectureCodeByName","getSousprefecturesAndCodes","getsousPrefecturesCodes","getSousprefectures","getsousPrefecturesAndCodesByPrefectureCode","getsousPrefecturesAndCodesByPrefectureName","prefectureCode"],"mappings":"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","file":"index.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/index.js\");\n","import fs from 'fs'\nimport path from 'path'\nimport {sortBy, uniq} from 'lodash'\n\nconst regionsPath = path.join(process.cwd(), 'data', 'regions.json')\nconst prefecturespath = path.join(process.cwd(), 'data', 'prefectures.json')\nconst sousprefecturespath = path.join(process.cwd(), 'data', 'sousprefectures.json')\n\nlet regionsFile = fs.readFileSync(regionsPath)\nlet prefecturesFile = fs.readFileSync(prefecturespath)\nlet sousprefecturesFile = fs.readFileSync(sousprefecturespath)\n\nconst regions = JSON.parse(regionsFile.toString())\nconst prefectures = JSON.parse(prefecturesFile.toString())\nconst sousprefectures = JSON.parse(sousprefecturesFile.toString())\n\n/**************************************************/\n/** **************** REGION GETTERS ****************/\n/**************************************************/\n\nconst getRegionsAndCodes = () => (\n  sortBy(uniq(regions), 'region')\n )\n\nconst getRegions = () => (\n   sortBy(uniq(regions.map(data => (data.region))))\n  )\n\nconst getRegionsCodes = () => (\n    sortBy(uniq(regions.map(data => (data.code))))\n  )\n\nconst getRegionNameByCode = regionCode => {\n  let name = null\n  regions.map(data => {\n    if (data.code === regionCode) {\n      name = data.region\n    }\n  })\n  return name\n}\n\nconst getRegionCodeByName = regionName => {\n  let code = null\n  regions.map(data => {\n    if (data.region === regionName) {\n      code = data.code\n    }\n  })\n  return code\n}\n\n/***********************************************************/\n/** ***************** PREFECTURE GETTERS ********************/\n/***********************************************************/\n\nconst getPrefecturesAndCodes = () => (\n    sortBy(uniq(prefectures), 'prefecture')\n   )\n\nconst getPrefecturesCodes = () => (\n    sortBy(uniq(prefectures.map(data => (data.prefectureCode))))\n   )\n\nconst getPrefectures = () => (\n    sortBy(uniq(prefectures.map(data => (data.prefecture))))\n   )\n\nconst getPrefecturesAndCodesByRegionCode = regionCode => {\n  let result = []\n  prefectures.map(data => {\n    if (data.regionCode === regionCode) {\n      result.push(data)\n    }\n  })\n  return sortBy(uniq(result))\n}\n\nconst getPrefecturesByRegionCode = regionCode => {\n  let result = []\n  prefectures.map(data => {\n    if (data.regionCode === regionCode) {\n      result.push(data.prefecture)\n    }\n  })\n  return sortBy(uniq(result))\n}\n\nconst getPrefecturesByRegionName = regionName => {\n  let regionCode = getRegionCodeByName(regionName)\n  let result = []\n  prefectures.map(data => {\n    if (data.regionCode === regionCode) {\n      result.push(data.prefecture)\n    }\n  })\n  return sortBy(uniq(result))\n}\n\nconst getPrefectureNameByCode = prefectureCode => {\n  let name = null\n  prefectures.map(data => {\n    if (data.prefectureCode === prefectureCode) {\n      name = data.prefecture\n    }\n  })\n  return name\n}\n\nconst getPrefectureCodeByName = prefectureName => {\n  let code = null\n  prefectures.map(data => {\n    if (data.prefecture === prefectureName) {\n      code = data.prefectureCode\n    }\n  })\n  return code\n}\n\n/***********************************************************/\n/** *************** SOUS PREFECTURE GETTERS *****************/\n/***********************************************************/\n\nconst getSousprefecturesAndCodes = () => (\n  sortBy(uniq(sousprefectures), 'sousprefecture')\n )\n\nconst getsousPrefecturesCodes = () => (\n  sortBy(uniq(sousprefectures.map(data => (data.sousprefectureCode))))\n )\n\nconst getSousprefectures = () => (\n  sortBy(uniq(sousprefectures.map(data => (data.sousprefecture))))\n )\n\nconst getsousPrefecturesAndCodesByPrefectureCode = prefectureCode => {\n  let result = []\n  sousprefectures.map(data => {\n    if (data.prefectureCode === prefectureCode) {\n      result.push(data)\n    }\n  })\n  return sortBy(uniq(result))\n}\n\nconst getsousPrefecturesAndCodesByPrefectureName = prefectureName => {\n  let prefectureCode = getPrefectureCodeByName(prefectureName)\n  let result = []\n  sousprefectures.map(data => {\n    if (data.prefectureCode === prefectureCode) {\n      result.push(data.sousprefecture)\n    }\n  })\n  return sortBy(uniq(result))\n}\n\nexport default {\n  // regions\n  getRegionsAndCodes,\n  getRegions,\n  getRegionsCodes,\n  getRegionNameByCode,\n  getRegionCodeByName,\n\n  // prefectures\n  getPrefecturesAndCodes,\n  getPrefecturesCodes,\n  getPrefectures,\n  getPrefecturesAndCodesByRegionCode,\n  getPrefecturesByRegionCode,\n  getPrefecturesByRegionName,\n  getPrefectureNameByCode,\n  getPrefectureCodeByName,\n\n  // sousprectures\n  getSousprefecturesAndCodes,\n  getsousPrefecturesCodes,\n  getSousprefectures,\n  getsousPrefecturesAndCodesByPrefectureCode,\n  getsousPrefecturesAndCodesByPrefectureName\n}\n","module.exports = require(\"fs\");","module.exports = require(\"lodash\");","module.exports = require(\"path\");"],"sourceRoot":""}